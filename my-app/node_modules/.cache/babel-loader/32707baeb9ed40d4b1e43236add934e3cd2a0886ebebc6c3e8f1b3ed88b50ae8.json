{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mazha\\\\OneDrive\\\\Desktop\\\\actual-shoes-7533\\\\my-app\\\\src\\\\components\\\\doctors.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport data from \"./db.json\";\nimport \"../Css/doctors.css\";\nimport Buttonforbooking from \"./bookingbutton\";\nimport MapboxMap from \"./map\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Doctors = () => {\n  _s();\n  const doctorsPerPage = 4; // Number of doctors per page\n  const [content, change_data] = useState(data);\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    // You can perform any additional logic here when content or currentPage changes.\n    // For now, we won't add any additional logic.\n  }, [content, currentPage]);\n\n  // Calculate the index range for the current page\n  const startIndex = (currentPage - 1) * doctorsPerPage;\n  const endIndex = startIndex + doctorsPerPage;\n\n  // Slice the data array to get doctors for the current page\n  const doctorsForPage = content.slice(startIndex, endIndex);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Doctors\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [doctorsForPage.map(({\n        id,\n        image,\n        first_name,\n        role,\n        address\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parent-element\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Doctors-card-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: \"error\",\n            className: \"Doctors-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"Doctor-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: first_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Buttonforbooking, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: Array.from({\n          length: Math.ceil(content.length / doctorsPerPage)\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(index + 1),\n          className: currentPage === index + 1 ? \"active\" : \"\",\n          children: index + 1\n        }, index + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MapboxMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Doctors, \"AU8HiFDT/0IwwMd12yG6eikwxqs=\");\n_c = Doctors;\nexport default Doctors;\nvar _c;\n$RefreshReg$(_c, \"Doctors\");","map":{"version":3,"names":["React","useState","useEffect","data","Buttonforbooking","MapboxMap","jsxDEV","_jsxDEV","Doctors","_s","doctorsPerPage","content","change_data","currentPage","setCurrentPage","startIndex","endIndex","doctorsForPage","slice","className","children","map","id","image","first_name","role","address","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","Math","ceil","_","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mazha/OneDrive/Desktop/actual-shoes-7533/my-app/src/components/doctors.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport data from \"./db.json\";\r\nimport \"../Css/doctors.css\";\r\nimport Buttonforbooking from \"./bookingbutton\";\r\nimport MapboxMap from \"./map\"\r\n\r\nconst Doctors = () => {\r\n  const doctorsPerPage = 4; // Number of doctors per page\r\n  const [content, change_data] = useState(data);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    // You can perform any additional logic here when content or currentPage changes.\r\n    // For now, we won't add any additional logic.\r\n  }, [content, currentPage]);\r\n\r\n  // Calculate the index range for the current page\r\n  const startIndex = (currentPage - 1) * doctorsPerPage;\r\n  const endIndex = startIndex + doctorsPerPage;\r\n\r\n  // Slice the data array to get doctors for the current page\r\n  const doctorsForPage = content.slice(startIndex, endIndex);\r\n\r\n  return (\r\n    <div className=\"Doctors\">\r\n\r\n\r\n\r\n      <div className=\"\">\r\n      {doctorsForPage.map(({ id, image, first_name, role, address }) => (\r\n\r\n        <div className=\"parent-element\">\r\n        <div className=\"Doctors-card-container\" key={id}>\r\n          <img src={image} alt=\"error\" className=\"Doctors-image\"/>\r\n          <div id=\"Doctor-details\">\r\n            <h1>{first_name}</h1>\r\n            <p>{role}</p>\r\n            <p>{address}</p>\r\n          </div>\r\n          \r\n        </div>\r\n        <div>{<Buttonforbooking/>}</div>\r\n        </div>\r\n      ))}\r\n   \r\n      <div className=\"pagination\">\r\n        {Array.from({ length: Math.ceil(content.length / doctorsPerPage) }, (_, index) => (\r\n          <button\r\n            key={index + 1}\r\n            onClick={() => setCurrentPage(index + 1)}\r\n            className={currentPage === index + 1 ? \"active\" : \"\"}\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      </div>\r\n      \r\n      <div>{<MapboxMap/>}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Doctors;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}