{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachMinuteOfInterval;\nvar _index = _interopRequireDefault(require(\"../addMinutes/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../toDate/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../startOfMinute/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n/**\n * @name eachMinuteOfInterval\n * @category Interval Helpers\n * @summary Return the array of minutes within the specified time interval.\n *\n * @description\n * Returns the array of minutes within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The step must be equal to or greater than 1\n * @throws {TypeError} 1 argument required\n * @returns {Date[]} the array with starts of minutes from the minute of the interval start to the minute of the interval end\n * @throws {RangeError} `options.step` must be a number equal to or greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each minute between 14 October 2020, 13:00 and 14 October 2020, 13:03\n * const result = eachMinuteOfInterval({\n *   start: new Date(2014, 9, 14, 13),\n *   end: new Date(2014, 9, 14, 13, 3)\n * })\n * //=> [\n * //   Wed Oct 14 2014 13:00:00,\n * //   Wed Oct 14 2014 13:01:00,\n * //   Wed Oct 14 2014 13:02:00,\n * //   Wed Oct 14 2014 13:03:00\n * // ]\n */\nfunction eachMinuteOfInterval(interval, options) {\n  var _options$step;\n  (0, _index4.default)(1, arguments);\n  var startDate = (0, _index3.default)((0, _index2.default)(interval.start));\n  var endDate = (0, _index2.default)(interval.end);\n  var startTime = startDate.getTime();\n  var endTime = endDate.getTime();\n  if (startTime >= endTime) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  var step = Number((_options$step = options === null || options === void 0 ? void 0 : options.step) !== null && _options$step !== void 0 ? _options$step : 1);\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number equal to or greater than 1');\n  while (currentDate.getTime() <= endTime) {\n    dates.push((0, _index2.default)(currentDate));\n    currentDate = (0, _index.default)(currentDate, step);\n  }\n  return dates;\n}\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","default","Object","defineProperty","exports","value","eachMinuteOfInterval","_index","_index2","_index3","_index4","interval","options","_options$step","arguments","startDate","start","endDate","end","startTime","getTime","endTime","RangeError","dates","currentDate","step","Number","isNaN","push","module"],"sources":["C:/Users/mazha/OneDrive/Desktop/actual-shoes-7533/my-app/node_modules/date-fns/eachMinuteOfInterval/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = eachMinuteOfInterval;\nvar _index = _interopRequireDefault(require(\"../addMinutes/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../toDate/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../startOfMinute/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n/**\n * @name eachMinuteOfInterval\n * @category Interval Helpers\n * @summary Return the array of minutes within the specified time interval.\n *\n * @description\n * Returns the array of minutes within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The step must be equal to or greater than 1\n * @throws {TypeError} 1 argument required\n * @returns {Date[]} the array with starts of minutes from the minute of the interval start to the minute of the interval end\n * @throws {RangeError} `options.step` must be a number equal to or greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each minute between 14 October 2020, 13:00 and 14 October 2020, 13:03\n * const result = eachMinuteOfInterval({\n *   start: new Date(2014, 9, 14, 13),\n *   end: new Date(2014, 9, 14, 13, 3)\n * })\n * //=> [\n * //   Wed Oct 14 2014 13:00:00,\n * //   Wed Oct 14 2014 13:01:00,\n * //   Wed Oct 14 2014 13:02:00,\n * //   Wed Oct 14 2014 13:03:00\n * // ]\n */\nfunction eachMinuteOfInterval(interval, options) {\n  var _options$step;\n  (0, _index4.default)(1, arguments);\n  var startDate = (0, _index3.default)((0, _index2.default)(interval.start));\n  var endDate = (0, _index2.default)(interval.end);\n  var startTime = startDate.getTime();\n  var endTime = endDate.getTime();\n  if (startTime >= endTime) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  var step = Number((_options$step = options === null || options === void 0 ? void 0 : options.step) !== null && _options$step !== void 0 ? _options$step : 1);\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number equal to or greater than 1');\n  while (currentDate.getTime() <= endTime) {\n    dates.push((0, _index2.default)(currentDate));\n    currentDate = (0, _index.default)(currentDate, step);\n  }\n  return dates;\n}\nmodule.exports = exports.default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC,CAACC,OAAO;AAC5FC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACH,OAAO,GAAGK,oBAAoB;AACtC,IAAIC,MAAM,GAAGR,sBAAsB,CAACC,OAAO,CAAC,wBAAwB,CAAC,CAAC;AACtE,IAAIQ,OAAO,GAAGT,sBAAsB,CAACC,OAAO,CAAC,oBAAoB,CAAC,CAAC;AACnE,IAAIS,OAAO,GAAGV,sBAAsB,CAACC,OAAO,CAAC,2BAA2B,CAAC,CAAC;AAC1E,IAAIU,OAAO,GAAGX,sBAAsB,CAACC,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,oBAAoBA,CAACK,QAAQ,EAAEC,OAAO,EAAE;EAC/C,IAAIC,aAAa;EACjB,CAAC,CAAC,EAAEH,OAAO,CAACT,OAAO,EAAE,CAAC,EAAEa,SAAS,CAAC;EAClC,IAAIC,SAAS,GAAG,CAAC,CAAC,EAAEN,OAAO,CAACR,OAAO,EAAE,CAAC,CAAC,EAAEO,OAAO,CAACP,OAAO,EAAEU,QAAQ,CAACK,KAAK,CAAC,CAAC;EAC1E,IAAIC,OAAO,GAAG,CAAC,CAAC,EAAET,OAAO,CAACP,OAAO,EAAEU,QAAQ,CAACO,GAAG,CAAC;EAChD,IAAIC,SAAS,GAAGJ,SAAS,CAACK,OAAO,CAAC,CAAC;EACnC,IAAIC,OAAO,GAAGJ,OAAO,CAACG,OAAO,CAAC,CAAC;EAC/B,IAAID,SAAS,IAAIE,OAAO,EAAE;IACxB,MAAM,IAAIC,UAAU,CAAC,kBAAkB,CAAC;EAC1C;EACA,IAAIC,KAAK,GAAG,EAAE;EACd,IAAIC,WAAW,GAAGT,SAAS;EAC3B,IAAIU,IAAI,GAAGC,MAAM,CAAC,CAACb,aAAa,GAAGD,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACa,IAAI,MAAM,IAAI,IAAIZ,aAAa,KAAK,KAAK,CAAC,GAAGA,aAAa,GAAG,CAAC,CAAC;EAC5J,IAAIY,IAAI,GAAG,CAAC,IAAIE,KAAK,CAACF,IAAI,CAAC,EAAE,MAAM,IAAIH,UAAU,CAAC,4DAA4D,CAAC;EAC/G,OAAOE,WAAW,CAACJ,OAAO,CAAC,CAAC,IAAIC,OAAO,EAAE;IACvCE,KAAK,CAACK,IAAI,CAAC,CAAC,CAAC,EAAEpB,OAAO,CAACP,OAAO,EAAEuB,WAAW,CAAC,CAAC;IAC7CA,WAAW,GAAG,CAAC,CAAC,EAAEjB,MAAM,CAACN,OAAO,EAAEuB,WAAW,EAAEC,IAAI,CAAC;EACtD;EACA,OAAOF,KAAK;AACd;AACAM,MAAM,CAACzB,OAAO,GAAGA,OAAO,CAACH,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}