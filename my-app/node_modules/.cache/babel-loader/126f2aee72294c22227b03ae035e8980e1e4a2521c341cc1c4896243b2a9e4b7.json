{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addBusinessDays;\nvar _index = _interopRequireDefault(require(\"../isWeekend/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../toDate/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\nvar _index5 = _interopRequireDefault(require(\"../isSunday/index.js\"));\nvar _index6 = _interopRequireDefault(require(\"../isSaturday/index.js\"));\n/**\n * @name addBusinessDays\n * @category Day Helpers\n * @summary Add the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the business days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 business days to 1 September 2014:\n * const result = addBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n */\nfunction addBusinessDays(dirtyDate, dirtyAmount) {\n  (0, _index4.default)(2, arguments);\n  var date = (0, _index2.default)(dirtyDate);\n  var startedOnWeekend = (0, _index.default)(date);\n  var amount = (0, _index3.default)(dirtyAmount);\n  if (isNaN(amount)) return new Date(NaN);\n  var hours = date.getHours();\n  var sign = amount < 0 ? -1 : 1;\n  var fullWeeks = (0, _index3.default)(amount / 5);\n  date.setDate(date.getDate() + fullWeeks * 7);\n\n  // Get remaining days not part of a full week\n  var restDays = Math.abs(amount % 5);\n\n  // Loops over remaining days\n  while (restDays > 0) {\n    date.setDate(date.getDate() + sign);\n    if (!(0, _index.default)(date)) restDays -= 1;\n  }\n\n  // If the date is a weekend day and we reduce a dividable of\n  // 5 from it, we land on a weekend date.\n  // To counter this, we add days accordingly to land on the next business day\n  if (startedOnWeekend && (0, _index.default)(date) && amount !== 0) {\n    // If we're reducing days, we want to add days until we land on a weekday\n    // If we're adding days we want to reduce days until we land on a weekday\n    if ((0, _index6.default)(date)) date.setDate(date.getDate() + (sign < 0 ? 2 : -1));\n    if ((0, _index5.default)(date)) date.setDate(date.getDate() + (sign < 0 ? 1 : -2));\n  }\n\n  // Restore hours to avoid DST lag\n  date.setHours(hours);\n  return date;\n}\nmodule.exports = exports.default;","map":{"version":3,"names":["_interopRequireDefault","require","default","Object","defineProperty","exports","value","addBusinessDays","_index","_index2","_index3","_index4","_index5","_index6","dirtyDate","dirtyAmount","arguments","date","startedOnWeekend","amount","isNaN","Date","NaN","hours","getHours","sign","fullWeeks","setDate","getDate","restDays","Math","abs","setHours","module"],"sources":["C:/Users/mazha/OneDrive/Desktop/actual-shoes-7533/my-app/node_modules/date-fns/addBusinessDays/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addBusinessDays;\nvar _index = _interopRequireDefault(require(\"../isWeekend/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../toDate/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\nvar _index5 = _interopRequireDefault(require(\"../isSunday/index.js\"));\nvar _index6 = _interopRequireDefault(require(\"../isSaturday/index.js\"));\n/**\n * @name addBusinessDays\n * @category Day Helpers\n * @summary Add the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the business days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 business days to 1 September 2014:\n * const result = addBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n */\nfunction addBusinessDays(dirtyDate, dirtyAmount) {\n  (0, _index4.default)(2, arguments);\n  var date = (0, _index2.default)(dirtyDate);\n  var startedOnWeekend = (0, _index.default)(date);\n  var amount = (0, _index3.default)(dirtyAmount);\n  if (isNaN(amount)) return new Date(NaN);\n  var hours = date.getHours();\n  var sign = amount < 0 ? -1 : 1;\n  var fullWeeks = (0, _index3.default)(amount / 5);\n  date.setDate(date.getDate() + fullWeeks * 7);\n\n  // Get remaining days not part of a full week\n  var restDays = Math.abs(amount % 5);\n\n  // Loops over remaining days\n  while (restDays > 0) {\n    date.setDate(date.getDate() + sign);\n    if (!(0, _index.default)(date)) restDays -= 1;\n  }\n\n  // If the date is a weekend day and we reduce a dividable of\n  // 5 from it, we land on a weekend date.\n  // To counter this, we add days accordingly to land on the next business day\n  if (startedOnWeekend && (0, _index.default)(date) && amount !== 0) {\n    // If we're reducing days, we want to add days until we land on a weekday\n    // If we're adding days we want to reduce days until we land on a weekday\n    if ((0, _index6.default)(date)) date.setDate(date.getDate() + (sign < 0 ? 2 : -1));\n    if ((0, _index5.default)(date)) date.setDate(date.getDate() + (sign < 0 ? 1 : -2));\n  }\n\n  // Restore hours to avoid DST lag\n  date.setHours(hours);\n  return date;\n}\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}