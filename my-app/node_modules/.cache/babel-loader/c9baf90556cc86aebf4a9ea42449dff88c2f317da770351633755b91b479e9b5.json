{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mazha\\\\OneDrive\\\\Desktop\\\\actual-shoes-7533\\\\my-app\\\\src\\\\components\\\\bookingbutton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { startOfDay, addDays, addMinutes, format } from \"date-fns\";\nimport \"../Css/booking.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Buttonforbooking = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [bookedSlots, setBookedSlots] = useState([]);\n  const generateTimeSlots = date => {\n    const timeSlots = [];\n    const interval = 30; // minutes\n    const numberOfSlots = 8;\n    for (let i = 0; i < numberOfSlots; i++) {\n      const startTime = addMinutes(date, i * interval);\n      const endTime = addMinutes(startTime, interval);\n      timeSlots.push({\n        start: startTime,\n        end: endTime\n      });\n    }\n    return timeSlots;\n  };\n  const handleSlotClick = slot => {\n    if (!bookedSlots.some(booked => slot.start === booked.start)) {\n      setBookedSlots([...bookedSlots, slot]);\n    }\n  };\n  const isSlotBooked = slot => {\n    return bookedSlots.some(booked => slot.start === booked.start);\n  };\n  const availableDates = [...Array(7)].map((_, index) => addDays(startOfDay(new Date()), index));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking\",\n    children: availableDates.map(date => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: format(date, \"MMM d, yyyy\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-slots\",\n        children: generateTimeSlots(date).map(slot => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `time-slot ${isSlotBooked(slot) ? \"booked\" : \"available\"}`,\n          onClick: () => handleSlotClick(slot),\n          children: format(slot.start, \"hh:mm a\")\n        }, slot.start.getTime(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, date.getTime(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Buttonforbooking, \"o6bmFrLUEsBOBsxuGiiltG670hY=\");\n_c = Buttonforbooking;\nexport default Buttonforbooking;\nvar _c;\n$RefreshReg$(_c, \"Buttonforbooking\");","map":{"version":3,"names":["React","useState","startOfDay","addDays","addMinutes","format","jsxDEV","_jsxDEV","Buttonforbooking","_s","selectedDate","setSelectedDate","bookedSlots","setBookedSlots","generateTimeSlots","date","timeSlots","interval","numberOfSlots","i","startTime","endTime","push","start","end","handleSlotClick","slot","some","booked","isSlotBooked","availableDates","Array","map","_","index","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","getTime","_c","$RefreshReg$"],"sources":["C:/Users/mazha/OneDrive/Desktop/actual-shoes-7533/my-app/src/components/bookingbutton.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { startOfDay, addDays, addMinutes, format } from \"date-fns\";\r\nimport \"../Css/booking.css\";\r\n\r\nconst Buttonforbooking = () => {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [bookedSlots, setBookedSlots] = useState([]);\r\n\r\n  const generateTimeSlots = (date) => {\r\n    const timeSlots = [];\r\n    const interval = 30; // minutes\r\n    const numberOfSlots = 8;\r\n\r\n    for (let i = 0; i < numberOfSlots; i++) {\r\n      const startTime = addMinutes(date, i * interval);\r\n      const endTime = addMinutes(startTime, interval);\r\n      timeSlots.push({ start: startTime, end: endTime });\r\n    }\r\n\r\n    return timeSlots;\r\n  };\r\n\r\n  const handleSlotClick = (slot) => {\r\n    if (!bookedSlots.some((booked) => slot.start === booked.start)) {\r\n      setBookedSlots([...bookedSlots, slot]);\r\n    }\r\n  };\r\n\r\n  const isSlotBooked = (slot) => {\r\n    return bookedSlots.some((booked) => slot.start === booked.start);\r\n  };\r\n\r\n  const availableDates = [...Array(7)].map((_, index) =>\r\n    addDays(startOfDay(new Date()), index)\r\n  );\r\n\r\n  return (\r\n    <div className=\"booking\">\r\n      {availableDates.map((date) => (\r\n        <div key={date.getTime()} className=\"date-container\">\r\n          <h2>{format(date, \"MMM d, yyyy\")}</h2>\r\n          <div className=\"time-slots\">\r\n            {generateTimeSlots(date).map((slot) => (\r\n              <button\r\n                key={slot.start.getTime()}\r\n                className={`time-slot ${\r\n                  isSlotBooked(slot) ? \"booked\" : \"available\"\r\n                }`}\r\n                onClick={() => handleSlotClick(slot)}\r\n              >\r\n                {format(slot.start, \"hh:mm a\")}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttonforbooking;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}